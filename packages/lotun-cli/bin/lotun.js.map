{"version":3,"file":"lotun.js","sourceRoot":"","sources":["../src/lotun.ts"],"names":[],"mappings":"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","sourcesContent":["import os from 'os';\nimport fs from 'fs';\nimport path from 'path';\nimport chalk from 'chalk';\nimport { LotunClient, errorCodes } from '@lotun/client';\nimport minimist from 'minimist';\nimport { AnyARecord } from 'dns';\n\nlet homeDir = os.homedir();\n\nlet argv: any = {};\nif (process.argv) {\n  argv = minimist(process.argv.slice(2));\n}\n\n/*\n  --deviceToken\n  -t\n  --config\n  -c\n*/\n\nlet stage: 'devel' | 'local' | undefined;\n\nif (process.env.LOTUN_STAGE) {\n  stage = <'devel' | 'local'>process.env.LOTUN_STAGE;\n}\n\nconst lotunClient = new LotunClient(stage);\nconst { log, error } = console;\n\nlet config: string;\nlet lastError: string;\n\nasync function generateDeviceToken() {\n  let deviceToken = undefined;\n  while (!deviceToken) {\n    try {\n      deviceToken = await lotunClient.generateDeviceToken();\n      break;\n    } catch (err) {\n      console.error(err);\n      await new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n        }, 5000);\n      });\n    }\n  }\n  return deviceToken;\n}\n\nasync function getDeviceToken() {\n  log(chalk`Reading configuration from {yellow.bold ${config}}\\n`);\n\n  let data;\n  try {\n    data = fs.readFileSync(config);\n    try {\n      data = JSON.parse(data.toString());\n      if (!data || !data.deviceToken) {\n        chalk.redBright(`Cannot read from config ${config} - corrupted file.`);\n        process.exit();\n      }\n    } catch (err) {\n      chalk.redBright(`Cannot read from config ${config} - corrupted file.`);\n      process.exit();\n    }\n  } catch (err) {\n    log(chalk.bgYellowBright('Generating new device token.\\n'));\n    data = {\n      deviceToken: await generateDeviceToken(),\n    };\n\n    try {\n      fs.writeFileSync(config, JSON.stringify(data));\n    } catch (e) {\n      error(e);\n      chalk.redBright(`Cannot write to config ${config}`);\n      process.exit();\n    }\n  }\n\n  return data.deviceToken;\n}\n\nasync function main() {\n  if (argv.c || argv.config) {\n    config = path.normalize(argv.c || argv.config);\n  } else {\n    const configDir = path.join(homeDir, '.lotun');\n    let configFile = 'config.json';\n    if (process.env.NODE_ENV === 'devel') {\n      configFile = 'devel-config.json';\n    }\n    fs.mkdirSync(configDir, { recursive: true });\n    config = path.join(configDir, configFile);\n  }\n\n  let deviceToken: string;\n  if (argv.t || argv.deviceToken) {\n    deviceToken = argv.t || argv.deviceToken;\n  } else {\n    deviceToken = await getDeviceToken();\n  }\n\n  lotunClient.setDeviceToken(deviceToken);\n  lotunClient.on('connect', () => {\n    log(chalk.greenBright('Device connected, setup your device from Dashboard:'));\n    log(chalk.underline(`${lotunClient.dashboardUrl}`));\n  });\n\n  lotunClient.on('error', () => {\n    // console.error(err);\n  });\n\n  lotunClient.on('close', (code, reason) => {\n    if (reason === errorCodes.DEVICE_TOKEN_UNPAIRED && lastError !== reason) {\n      const encodedToken = encodeURIComponent(deviceToken);\n      const encodedHostname = encodeURIComponent(os.hostname());\n      log(chalk.redBright('Device is not yet paried to account, please pair your device by click on following link:'));\n      log(`${lotunClient.dashboardUrl}/devices/new?token=${encodedToken}&name=${encodedHostname}`);\n    }\n    if (reason === errorCodes.DEVICE_TOKEN_INVALID && lastError !== reason) {\n      log(chalk.redBright('Your device token is invalid.'));\n    }\n\n    lastError = reason;\n  });\n\n  lotunClient.connect();\n}\n\nmain().catch(error);\n"]}